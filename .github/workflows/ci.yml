on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - name: Setup up mold linker
        uses: rui314/setup-mold@v1

      - name: Set up Nix cache
        uses: cachix/cachix-action@v16
        with:
          name: tweag-topiary
          authToken: "${{ secrets.CACHIX_TWEAG_TOPIARY_AUTH_TOKEN }}"

      - name: Set up frontend cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/puppeteer
          key: frontend_${{ matrix.os }}_${{ hashFiles('**/package-lock.json') }}

      - name: Clippy, test, and benchmark
        if: matrix.os == 'ubuntu-latest'
        run: export GC_DONT_GC=1; nix -L flake check

      - name: Build and test executable
        run: 'echo \{ \"foo\": \"bar\" \} | nix run . -- fmt -l json'

      - name: Build the topiary-cli and test those tests that cannot be performed in Nix
        run: nix develop --command bash -c "cargo test -p topiary-cli --features experimental"

      - name: Build client-app example
        run: nix build .#client-app

      - name: Verify that usage in README.md matches CLI output
        run: nix run .#verify-documented-usage

  build-windows:
    # Note: GitHub's Windows runners have a Rust toolchain installed
    # https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prefetch grammars
        run: cargo run --all-features -- prefetch

      - name: Run test suite
        run: cargo test --all-features
