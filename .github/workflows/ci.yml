on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:

  nix-flake-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up build dependencies
        uses: ./.github/actions/nix-build
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          auth_token: "${{ secrets.CACHIX_TWEAG_TOPIARY_AUTH_TOKEN }}"

      - name: Clippy, test, and benchmark
        env:
          # Disable Nix garbage collection
          GC_DONT_GC: 1
        run: nix -L flake check

  nix-client-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up build dependencies
        uses: ./.github/actions/nix-build
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          auth_token: "${{ secrets.CACHIX_TWEAG_TOPIARY_AUTH_TOKEN }}"

      - name: Build and test executable
        run: 'echo \{ \"foo\": \"bar\" \} | nix run . -- fmt -l json'

      - name: Build client-app example
        run: nix build .#client-app

      - name: Verify that usage in README.md matches CLI output
        run: nix run .#verify-documented-usage

  topiary-cli:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up build dependencies
        uses: ./.github/actions/nix-build
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          auth_token: "${{ secrets.CACHIX_TWEAG_TOPIARY_AUTH_TOKEN }}"

      - name: Build the topiary-cli and test those tests that cannot be performed in Nix
        run: nix develop --command bash -c "cargo test -p topiary-cli --features experimental"

  test-windows:
    # Note: GitHub's Windows runners have a Rust toolchain installed
    # https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Init rust-cache
        uses: Swatinem/rust-cache@v2

      - name: Prefetch grammars
        run: cargo run --all-features -- prefetch

      - name: Run test suite
        run: cargo test --all-features
