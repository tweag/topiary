[package]
name = "topiary-config"
# The version should always be "X.Y.Z" where the workspace version is `X.Y.Z'`
# with `Z' <= Z`. Whenever there's a need to release an update to the config
# without changing the core of Topiary, just bump `Z`.
version = "0.6.3"
description = "Configuration parser and defaults for Topiary"
categories = ["development-tools", "text-processing"]
keywords = ["code-formatter", "formatter", "text", "tree-sitter"]
edition.workspace = true
authors.workspace = true
homepage.workspace = true
repository.workspace = true
documentation.workspace = true
readme.workspace = true
license.workspace = true

[dependencies]
anyhow.workspace = true
directories.workspace = true
itertools.workspace = true
gix.workspace = true
log.workspace = true
nickel-lang-core.workspace = true
rayon = { workspace = true, optional = true }
serde = { workspace = true, features = ["derive"] }
tempfile.workspace = true
toml.workspace = true
tree-sitter.workspace = true
tree-sitter-language.workspace = true

topiary-tree-sitter-facade.workspace = true
topiary-web-tree-sitter-sys.workspace = true

[target.'cfg(not(target_family = "wasm"))'.dependencies]
clap = { workspace = true, features = ["derive"] }
tree-sitter-loader.workspace = true
libloading.workspace = true

[features]
default = [ "parallel" ]

# Enabling the `parallel` feature enables parallel computation where possible.
# At the moment, this is only in grammar prefetching
parallel = [ "dep:rayon" ]

bash = []
css = []
json = []
json5 = []
nickel = []
ocaml = []
ocaml_interface = []
ocamllex = []
openscad = []
rust = []
sdml = []
toml = []
tree_sitter_query = []
wit = []

# This a convenience for the sake of downstream applications which don't
# wish to cherry-pick grammars (e.g., the playground)
all = [
  "bash",
  "css",
  "json",
  "json5",
  "nickel",
  "ocaml",
  "ocaml_interface",
  "ocamllex",
  "openscad",
  "rust",
  "sdml",
  "toml",
  "tree_sitter_query",
  "wit",
]
