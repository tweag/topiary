[package]
name = "topiary-config"
description = "Configuration parser and defaults for Topiary"
categories = ["development-tools", "text-processing"]
keywords = ["code-formatter", "formatter", "text", "tree-sitter"]
version.workspace = true
edition.workspace = true
authors.workspace = true
homepage.workspace = true
repository.workspace = true
documentation.workspace = true
readme.workspace = true
license.workspace = true

[dependencies]
directories.workspace = true
itertools.workspace = true
log.workspace = true
nickel-lang-core.workspace = true
rayon = { workspace = true, optional = true }
serde = { workspace = true, features = ["derive"] }
tempfile.workspace = true
toml.workspace = true
tree-sitter.workspace = true

topiary-tree-sitter-facade.workspace = true
topiary-web-tree-sitter-sys.workspace = true

[target.'cfg(not(target_family = "wasm"))'.dependencies]
clap = { workspace = true, features = ["derive"] }
cc.workspace = true
git2.workspace = true
libloading.workspace = true

[features]
default = ["parallel"]

# Enabling the `parallel` feature enables parallel computation where possible.
# At the moment, this is only in grammar prefetching
parallel = ["dep:rayon"]

bash = []
css = []
json = []
nickel = []
ocaml = []
ocaml_interface = []
ocamllex = []
nix = []
rust = []
toml = []
tree_sitter_query = []

# This a convenience for the sake of downstream applications which don't
# wish to cherry-pick grammars (e.g., the playground)
all = [
    "bash",
    "css",
    "json",
    "nickel",
    "ocaml",
    "ocaml_interface",
    "ocamllex",
    "rust",
    "nix",
    "toml",
    "tree_sitter_query",
]
