[package]
name = "topiary-config"
description = "Configuration parser and defaults for Topiary"
categories = ["development-tools", "text-processing"]
keywords = ["code-formatter", "formatter", "text", "tree-sitter"]
version.workspace = true
edition.workspace = true
authors.workspace = true
homepage.workspace = true
repository.workspace = true
documentation.workspace = true
readme.workspace = true
license.workspace = true

[dependencies]
directories.workspace = true
indoc.workspace = true
itertools.workspace = true
log.workspace = true
serde = { workspace = true, features = ["derive"] }
toml.workspace = true

topiary-tree-sitter-facade.workspace = true
topiary-web-tree-sitter-sys.workspace = true
tree-sitter-json = { workspace = true, optional = true }
tree-sitter-rust = { workspace = true, optional = true }
tree-sitter-toml = { workspace = true, optional = true }
tree-sitter-bash = { workspace = true, optional = true }
tree-sitter-css = { workspace = true, optional = true }
tree-sitter-nickel = { workspace = true, optional = true }
tree-sitter-query = { workspace = true, optional = true }
tree-sitter-ocaml = { workspace = true, optional = true }
tree-sitter-ocamllex = { workspace = true, optional = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
clap = { workspace = true, features = ["derive"] }

[features]
bash = ["dep:tree-sitter-bash"]
css = ["dep:tree-sitter-css"]
json = ["dep:tree-sitter-json"]
nickel = ["dep:tree-sitter-nickel"]
ocaml = ["dep:tree-sitter-ocaml"]
ocaml_interface = ["dep:tree-sitter-ocaml"]
ocamllex = ["dep:tree-sitter-ocamllex"]
rust = ["dep:tree-sitter-rust"]
toml = ["dep:tree-sitter-toml"]
tree_sitter_query = ["dep:tree-sitter-query"]

# This a convenience for the sake of downstream applications which don't
# wish to cherry-pick grammars (e.g., the playground)
all = [
  "bash",
  "css",
  "json",
  "nickel",
  "ocaml",
  "ocaml_interface",
  "ocamllex",
  "rust",
  "toml",
  "tree_sitter_query"
]
