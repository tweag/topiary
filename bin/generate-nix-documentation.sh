#!/usr/bin/env sh
set -euC

## This file should run from the source of the repository. We check that this
## looks like it.
##
if ! [ -d nix/ ] || ! [ -d docs ]; then
    printf >& 'This does not look like the root of the Topiary directory, because\n'
    printf >& 'I cannot find a nix/ or docs/ directory. Aborting.\n'
    exit 2
fi

## Crawl Nix files with `nixdoc` and generate documentation in Markdown format.
##
printf >&2 'Generating documentation... '
content=$(
    printf '# Nix API\n\n'

    printf '<!-- This file is generated by bin/generate-nix-documentation.sh\n'
    printf '     from documentation in Nix source files. Modify the script or\n'
    printf '     the source files instead. -->\n\n'

    for file in nix/utils/*.nix nix/lib/*.nix; do
        nixdoc \
            --file "$file" \
            --category "" \
            --description "" \
            --prefix "lib" \
            --anchor-prefix "" \
            ;
    done
)
printf >&2 'done.\n'

## Grab the requested mode from command line...
##
case $# in
    0) mode=generate ;;
    1) mode=$1 ;;
    *) printf >&2 'Unexpected arguments: %s\n' "$*"; exit 2 ;;
esac

## If the mode is to `generate`, then write the file. If the mode is to `check`,
## then diff with the file and report. Otherwise, complain.
##
readonly target=docs/book/src/reference/nix.md
case $mode in
    generate)
        printf >&2 'Writing documentation to file... '
        echo "$content" >| $target
        printf >&2 'done.\n'
        exit 0
        ;;

    check)
        printf >&2 'Check if documentation matches the file... '
        if diff=$(diff --color=always <(echo "$content") "$target"); then
            printf >&2 'it does!\n'
            exit 0
        else
            printf >&2 'it does not.\n'
            printf >&2 'Here is the diff (red = generated; green = current):\n\n%s\n\n' "$diff"
            printf >&2 'Regenerate documentation by running %s.\n' "$(basename "$0")"
            exit 1
        fi
        ;;

    *)
        printf >&2 'Unexpected mode: %s\n' "$mode"
        exit 2
        ;;
esac
