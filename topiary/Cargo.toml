[package]
name = "topiary"
description = "Formats input source code in a style defined for that language."
version = { workspace = true }
edition = "2021"

[dependencies]
# For now we just load the tree-sitter language parsers statically.
# Eventually we will want to dynamically load them, like Helix does.
itertools = { workspace = true }
log = { workspace = true }
pretty_assertions = { workspace = true }
prettydiff = { workspace = true }
regex = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
toml = { workspace = true }
tree-sitter-facade = { workspace = true }
unescape = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true }
tree-sitter-json = { workspace = true }
tree-sitter-rust = { workspace = true }
tree-sitter-toml = { workspace = true }
tree-sitter-bash = { workspace = true }
tree-sitter-nickel = { workspace = true }
tree-sitter-query = { workspace = true }
tree-sitter-ocaml = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
futures = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt"] }
web-tree-sitter = { workspace = true, features = ["web"] }

[dev-dependencies]
criterion = { workspace = true, features = ["async_futures"] }
tokio-test = { workspace = true }

[[bench]]
name = "benchmark"
harness = false
